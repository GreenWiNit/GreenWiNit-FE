/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as R500RouteImport } from './routes/500'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TermsIndexRouteImport } from './routes/terms/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as PointShopIndexRouteImport } from './routes/point-shop/index'
import { Route as MyPageIndexRouteImport } from './routes/my-page/index'
import { Route as ChallengesIndexRouteImport } from './routes/challenges/index'
import { Route as MyPageWithdrawRouteImport } from './routes/my-page/withdraw'
import { Route as MyPageMyPointsRouteImport } from './routes/my-page/my-points'
import { Route as MyPageEditProfileRouteImport } from './routes/my-page/edit-profile'
import { Route as PostsIdIndexRouteImport } from './routes/posts/$id/index'
import { Route as MyPageChallengesCertifiedRouteImport } from './routes/my-page/challenges/certified'
import { Route as ChallengesChallengeIdDetailRouteImport } from './routes/challenges/$challenge-id/detail'
import { Route as ChallengesChallengeIdTeamsIndexRouteImport } from './routes/challenges/$challenge-id/teams/index'
import { Route as PointShopProductsPointProductIdEnrollAddressRouteImport } from './routes/point-shop/products/$point-product-id/enroll-address'
import { Route as PointShopProductsPointProductIdDetailRouteImport } from './routes/point-shop/products/$point-product-id/detail'
import { Route as MyPageChallengesCertifyChallengeIdRouteImport } from './routes/my-page/challenges/certify/$challenge-id'
import { Route as ChallengesUserMeJoinedRouteImport } from './routes/challenges/user/me/joined'
import { Route as ChallengesChallengeIdTeamsJoinRouteImport } from './routes/challenges/$challenge-id/teams/join'
import { Route as ChallengesChallengeIdTeamsEnrollRouteImport } from './routes/challenges/$challenge-id/teams/enroll'
import { Route as ChallengesChallengeIdSubmitIndividualRouteImport } from './routes/challenges/$challenge-id/submit/individual'
import { Route as ChallengesChallengeIdTeamsTeamIdIndexRouteImport } from './routes/challenges/$challenge-id/teams/$team-id/index'
import { Route as ChallengesChallengeIdTeamsTeamIdModifyRouteImport } from './routes/challenges/$challenge-id/teams/$team-id/modify'
import { Route as ChallengesChallengeIdTeamsTeamIdJoinedRouteImport } from './routes/challenges/$challenge-id/teams/$team-id/joined'
import { Route as ChallengesChallengeIdSubmitTeamTeamIdRouteImport } from './routes/challenges/$challenge-id/submit/team/$team-id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const R500Route = R500RouteImport.update({
  id: '/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsIndexRoute = TermsIndexRouteImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const PointShopIndexRoute = PointShopIndexRouteImport.update({
  id: '/point-shop/',
  path: '/point-shop/',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPageIndexRoute = MyPageIndexRouteImport.update({
  id: '/my-page/',
  path: '/my-page/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesIndexRoute = ChallengesIndexRouteImport.update({
  id: '/challenges/',
  path: '/challenges/',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPageWithdrawRoute = MyPageWithdrawRouteImport.update({
  id: '/my-page/withdraw',
  path: '/my-page/withdraw',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPageMyPointsRoute = MyPageMyPointsRouteImport.update({
  id: '/my-page/my-points',
  path: '/my-page/my-points',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPageEditProfileRoute = MyPageEditProfileRouteImport.update({
  id: '/my-page/edit-profile',
  path: '/my-page/edit-profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIdIndexRoute = PostsIdIndexRouteImport.update({
  id: '/posts/$id/',
  path: '/posts/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const MyPageChallengesCertifiedRoute =
  MyPageChallengesCertifiedRouteImport.update({
    id: '/my-page/challenges/certified',
    path: '/my-page/challenges/certified',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdDetailRoute =
  ChallengesChallengeIdDetailRouteImport.update({
    id: '/challenges/$challenge-id/detail',
    path: '/challenges/$challenge-id/detail',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdTeamsIndexRoute =
  ChallengesChallengeIdTeamsIndexRouteImport.update({
    id: '/challenges/$challenge-id/teams/',
    path: '/challenges/$challenge-id/teams/',
    getParentRoute: () => rootRouteImport,
  } as any)
const PointShopProductsPointProductIdEnrollAddressRoute =
  PointShopProductsPointProductIdEnrollAddressRouteImport.update({
    id: '/point-shop/products/$point-product-id/enroll-address',
    path: '/point-shop/products/$point-product-id/enroll-address',
    getParentRoute: () => rootRouteImport,
  } as any)
const PointShopProductsPointProductIdDetailRoute =
  PointShopProductsPointProductIdDetailRouteImport.update({
    id: '/point-shop/products/$point-product-id/detail',
    path: '/point-shop/products/$point-product-id/detail',
    getParentRoute: () => rootRouteImport,
  } as any)
const MyPageChallengesCertifyChallengeIdRoute =
  MyPageChallengesCertifyChallengeIdRouteImport.update({
    id: '/my-page/challenges/certify/$challenge-id',
    path: '/my-page/challenges/certify/$challenge-id',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesUserMeJoinedRoute = ChallengesUserMeJoinedRouteImport.update({
  id: '/challenges/user/me/joined',
  path: '/challenges/user/me/joined',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesChallengeIdTeamsJoinRoute =
  ChallengesChallengeIdTeamsJoinRouteImport.update({
    id: '/challenges/$challenge-id/teams/join',
    path: '/challenges/$challenge-id/teams/join',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdTeamsEnrollRoute =
  ChallengesChallengeIdTeamsEnrollRouteImport.update({
    id: '/challenges/$challenge-id/teams/enroll',
    path: '/challenges/$challenge-id/teams/enroll',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdSubmitIndividualRoute =
  ChallengesChallengeIdSubmitIndividualRouteImport.update({
    id: '/challenges/$challenge-id/submit/individual',
    path: '/challenges/$challenge-id/submit/individual',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdTeamsTeamIdIndexRoute =
  ChallengesChallengeIdTeamsTeamIdIndexRouteImport.update({
    id: '/challenges/$challenge-id/teams/$team-id/',
    path: '/challenges/$challenge-id/teams/$team-id/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdTeamsTeamIdModifyRoute =
  ChallengesChallengeIdTeamsTeamIdModifyRouteImport.update({
    id: '/challenges/$challenge-id/teams/$team-id/modify',
    path: '/challenges/$challenge-id/teams/$team-id/modify',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdTeamsTeamIdJoinedRoute =
  ChallengesChallengeIdTeamsTeamIdJoinedRouteImport.update({
    id: '/challenges/$challenge-id/teams/$team-id/joined',
    path: '/challenges/$challenge-id/teams/$team-id/joined',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesChallengeIdSubmitTeamTeamIdRoute =
  ChallengesChallengeIdSubmitTeamTeamIdRouteImport.update({
    id: '/challenges/$challenge-id/submit/team/$team-id',
    path: '/challenges/$challenge-id/submit/team/$team-id',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/500': typeof R500Route
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/my-page/edit-profile': typeof MyPageEditProfileRoute
  '/my-page/my-points': typeof MyPageMyPointsRoute
  '/my-page/withdraw': typeof MyPageWithdrawRoute
  '/challenges': typeof ChallengesIndexRoute
  '/my-page': typeof MyPageIndexRoute
  '/point-shop': typeof PointShopIndexRoute
  '/posts': typeof PostsIndexRoute
  '/terms': typeof TermsIndexRoute
  '/challenges/$challenge-id/detail': typeof ChallengesChallengeIdDetailRoute
  '/my-page/challenges/certified': typeof MyPageChallengesCertifiedRoute
  '/posts/$id': typeof PostsIdIndexRoute
  '/challenges/$challenge-id/submit/individual': typeof ChallengesChallengeIdSubmitIndividualRoute
  '/challenges/$challenge-id/teams/enroll': typeof ChallengesChallengeIdTeamsEnrollRoute
  '/challenges/$challenge-id/teams/join': typeof ChallengesChallengeIdTeamsJoinRoute
  '/challenges/user/me/joined': typeof ChallengesUserMeJoinedRoute
  '/my-page/challenges/certify/$challenge-id': typeof MyPageChallengesCertifyChallengeIdRoute
  '/point-shop/products/$point-product-id/detail': typeof PointShopProductsPointProductIdDetailRoute
  '/point-shop/products/$point-product-id/enroll-address': typeof PointShopProductsPointProductIdEnrollAddressRoute
  '/challenges/$challenge-id/teams': typeof ChallengesChallengeIdTeamsIndexRoute
  '/challenges/$challenge-id/submit/team/$team-id': typeof ChallengesChallengeIdSubmitTeamTeamIdRoute
  '/challenges/$challenge-id/teams/$team-id/joined': typeof ChallengesChallengeIdTeamsTeamIdJoinedRoute
  '/challenges/$challenge-id/teams/$team-id/modify': typeof ChallengesChallengeIdTeamsTeamIdModifyRoute
  '/challenges/$challenge-id/teams/$team-id': typeof ChallengesChallengeIdTeamsTeamIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/500': typeof R500Route
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/my-page/edit-profile': typeof MyPageEditProfileRoute
  '/my-page/my-points': typeof MyPageMyPointsRoute
  '/my-page/withdraw': typeof MyPageWithdrawRoute
  '/challenges': typeof ChallengesIndexRoute
  '/my-page': typeof MyPageIndexRoute
  '/point-shop': typeof PointShopIndexRoute
  '/posts': typeof PostsIndexRoute
  '/terms': typeof TermsIndexRoute
  '/challenges/$challenge-id/detail': typeof ChallengesChallengeIdDetailRoute
  '/my-page/challenges/certified': typeof MyPageChallengesCertifiedRoute
  '/posts/$id': typeof PostsIdIndexRoute
  '/challenges/$challenge-id/submit/individual': typeof ChallengesChallengeIdSubmitIndividualRoute
  '/challenges/$challenge-id/teams/enroll': typeof ChallengesChallengeIdTeamsEnrollRoute
  '/challenges/$challenge-id/teams/join': typeof ChallengesChallengeIdTeamsJoinRoute
  '/challenges/user/me/joined': typeof ChallengesUserMeJoinedRoute
  '/my-page/challenges/certify/$challenge-id': typeof MyPageChallengesCertifyChallengeIdRoute
  '/point-shop/products/$point-product-id/detail': typeof PointShopProductsPointProductIdDetailRoute
  '/point-shop/products/$point-product-id/enroll-address': typeof PointShopProductsPointProductIdEnrollAddressRoute
  '/challenges/$challenge-id/teams': typeof ChallengesChallengeIdTeamsIndexRoute
  '/challenges/$challenge-id/submit/team/$team-id': typeof ChallengesChallengeIdSubmitTeamTeamIdRoute
  '/challenges/$challenge-id/teams/$team-id/joined': typeof ChallengesChallengeIdTeamsTeamIdJoinedRoute
  '/challenges/$challenge-id/teams/$team-id/modify': typeof ChallengesChallengeIdTeamsTeamIdModifyRoute
  '/challenges/$challenge-id/teams/$team-id': typeof ChallengesChallengeIdTeamsTeamIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/500': typeof R500Route
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/my-page/edit-profile': typeof MyPageEditProfileRoute
  '/my-page/my-points': typeof MyPageMyPointsRoute
  '/my-page/withdraw': typeof MyPageWithdrawRoute
  '/challenges/': typeof ChallengesIndexRoute
  '/my-page/': typeof MyPageIndexRoute
  '/point-shop/': typeof PointShopIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/terms/': typeof TermsIndexRoute
  '/challenges/$challenge-id/detail': typeof ChallengesChallengeIdDetailRoute
  '/my-page/challenges/certified': typeof MyPageChallengesCertifiedRoute
  '/posts/$id/': typeof PostsIdIndexRoute
  '/challenges/$challenge-id/submit/individual': typeof ChallengesChallengeIdSubmitIndividualRoute
  '/challenges/$challenge-id/teams/enroll': typeof ChallengesChallengeIdTeamsEnrollRoute
  '/challenges/$challenge-id/teams/join': typeof ChallengesChallengeIdTeamsJoinRoute
  '/challenges/user/me/joined': typeof ChallengesUserMeJoinedRoute
  '/my-page/challenges/certify/$challenge-id': typeof MyPageChallengesCertifyChallengeIdRoute
  '/point-shop/products/$point-product-id/detail': typeof PointShopProductsPointProductIdDetailRoute
  '/point-shop/products/$point-product-id/enroll-address': typeof PointShopProductsPointProductIdEnrollAddressRoute
  '/challenges/$challenge-id/teams/': typeof ChallengesChallengeIdTeamsIndexRoute
  '/challenges/$challenge-id/submit/team/$team-id': typeof ChallengesChallengeIdSubmitTeamTeamIdRoute
  '/challenges/$challenge-id/teams/$team-id/joined': typeof ChallengesChallengeIdTeamsTeamIdJoinedRoute
  '/challenges/$challenge-id/teams/$team-id/modify': typeof ChallengesChallengeIdTeamsTeamIdModifyRoute
  '/challenges/$challenge-id/teams/$team-id/': typeof ChallengesChallengeIdTeamsTeamIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/500'
    | '/login'
    | '/signup'
    | '/my-page/edit-profile'
    | '/my-page/my-points'
    | '/my-page/withdraw'
    | '/challenges'
    | '/my-page'
    | '/point-shop'
    | '/posts'
    | '/terms'
    | '/challenges/$challenge-id/detail'
    | '/my-page/challenges/certified'
    | '/posts/$id'
    | '/challenges/$challenge-id/submit/individual'
    | '/challenges/$challenge-id/teams/enroll'
    | '/challenges/$challenge-id/teams/join'
    | '/challenges/user/me/joined'
    | '/my-page/challenges/certify/$challenge-id'
    | '/point-shop/products/$point-product-id/detail'
    | '/point-shop/products/$point-product-id/enroll-address'
    | '/challenges/$challenge-id/teams'
    | '/challenges/$challenge-id/submit/team/$team-id'
    | '/challenges/$challenge-id/teams/$team-id/joined'
    | '/challenges/$challenge-id/teams/$team-id/modify'
    | '/challenges/$challenge-id/teams/$team-id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/500'
    | '/login'
    | '/signup'
    | '/my-page/edit-profile'
    | '/my-page/my-points'
    | '/my-page/withdraw'
    | '/challenges'
    | '/my-page'
    | '/point-shop'
    | '/posts'
    | '/terms'
    | '/challenges/$challenge-id/detail'
    | '/my-page/challenges/certified'
    | '/posts/$id'
    | '/challenges/$challenge-id/submit/individual'
    | '/challenges/$challenge-id/teams/enroll'
    | '/challenges/$challenge-id/teams/join'
    | '/challenges/user/me/joined'
    | '/my-page/challenges/certify/$challenge-id'
    | '/point-shop/products/$point-product-id/detail'
    | '/point-shop/products/$point-product-id/enroll-address'
    | '/challenges/$challenge-id/teams'
    | '/challenges/$challenge-id/submit/team/$team-id'
    | '/challenges/$challenge-id/teams/$team-id/joined'
    | '/challenges/$challenge-id/teams/$team-id/modify'
    | '/challenges/$challenge-id/teams/$team-id'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/500'
    | '/login'
    | '/signup'
    | '/my-page/edit-profile'
    | '/my-page/my-points'
    | '/my-page/withdraw'
    | '/challenges/'
    | '/my-page/'
    | '/point-shop/'
    | '/posts/'
    | '/terms/'
    | '/challenges/$challenge-id/detail'
    | '/my-page/challenges/certified'
    | '/posts/$id/'
    | '/challenges/$challenge-id/submit/individual'
    | '/challenges/$challenge-id/teams/enroll'
    | '/challenges/$challenge-id/teams/join'
    | '/challenges/user/me/joined'
    | '/my-page/challenges/certify/$challenge-id'
    | '/point-shop/products/$point-product-id/detail'
    | '/point-shop/products/$point-product-id/enroll-address'
    | '/challenges/$challenge-id/teams/'
    | '/challenges/$challenge-id/submit/team/$team-id'
    | '/challenges/$challenge-id/teams/$team-id/joined'
    | '/challenges/$challenge-id/teams/$team-id/modify'
    | '/challenges/$challenge-id/teams/$team-id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  R500Route: typeof R500Route
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  MyPageEditProfileRoute: typeof MyPageEditProfileRoute
  MyPageMyPointsRoute: typeof MyPageMyPointsRoute
  MyPageWithdrawRoute: typeof MyPageWithdrawRoute
  ChallengesIndexRoute: typeof ChallengesIndexRoute
  MyPageIndexRoute: typeof MyPageIndexRoute
  PointShopIndexRoute: typeof PointShopIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
  TermsIndexRoute: typeof TermsIndexRoute
  ChallengesChallengeIdDetailRoute: typeof ChallengesChallengeIdDetailRoute
  MyPageChallengesCertifiedRoute: typeof MyPageChallengesCertifiedRoute
  PostsIdIndexRoute: typeof PostsIdIndexRoute
  ChallengesChallengeIdSubmitIndividualRoute: typeof ChallengesChallengeIdSubmitIndividualRoute
  ChallengesChallengeIdTeamsEnrollRoute: typeof ChallengesChallengeIdTeamsEnrollRoute
  ChallengesChallengeIdTeamsJoinRoute: typeof ChallengesChallengeIdTeamsJoinRoute
  ChallengesUserMeJoinedRoute: typeof ChallengesUserMeJoinedRoute
  MyPageChallengesCertifyChallengeIdRoute: typeof MyPageChallengesCertifyChallengeIdRoute
  PointShopProductsPointProductIdDetailRoute: typeof PointShopProductsPointProductIdDetailRoute
  PointShopProductsPointProductIdEnrollAddressRoute: typeof PointShopProductsPointProductIdEnrollAddressRoute
  ChallengesChallengeIdTeamsIndexRoute: typeof ChallengesChallengeIdTeamsIndexRoute
  ChallengesChallengeIdSubmitTeamTeamIdRoute: typeof ChallengesChallengeIdSubmitTeamTeamIdRoute
  ChallengesChallengeIdTeamsTeamIdJoinedRoute: typeof ChallengesChallengeIdTeamsTeamIdJoinedRoute
  ChallengesChallengeIdTeamsTeamIdModifyRoute: typeof ChallengesChallengeIdTeamsTeamIdModifyRoute
  ChallengesChallengeIdTeamsTeamIdIndexRoute: typeof ChallengesChallengeIdTeamsTeamIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/500': {
      id: '/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof R500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms/': {
      id: '/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/point-shop/': {
      id: '/point-shop/'
      path: '/point-shop'
      fullPath: '/point-shop'
      preLoaderRoute: typeof PointShopIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-page/': {
      id: '/my-page/'
      path: '/my-page'
      fullPath: '/my-page'
      preLoaderRoute: typeof MyPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/': {
      id: '/challenges/'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-page/withdraw': {
      id: '/my-page/withdraw'
      path: '/my-page/withdraw'
      fullPath: '/my-page/withdraw'
      preLoaderRoute: typeof MyPageWithdrawRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-page/my-points': {
      id: '/my-page/my-points'
      path: '/my-page/my-points'
      fullPath: '/my-page/my-points'
      preLoaderRoute: typeof MyPageMyPointsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-page/edit-profile': {
      id: '/my-page/edit-profile'
      path: '/my-page/edit-profile'
      fullPath: '/my-page/edit-profile'
      preLoaderRoute: typeof MyPageEditProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$id/': {
      id: '/posts/$id/'
      path: '/posts/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof PostsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-page/challenges/certified': {
      id: '/my-page/challenges/certified'
      path: '/my-page/challenges/certified'
      fullPath: '/my-page/challenges/certified'
      preLoaderRoute: typeof MyPageChallengesCertifiedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/detail': {
      id: '/challenges/$challenge-id/detail'
      path: '/challenges/$challenge-id/detail'
      fullPath: '/challenges/$challenge-id/detail'
      preLoaderRoute: typeof ChallengesChallengeIdDetailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/teams/': {
      id: '/challenges/$challenge-id/teams/'
      path: '/challenges/$challenge-id/teams'
      fullPath: '/challenges/$challenge-id/teams'
      preLoaderRoute: typeof ChallengesChallengeIdTeamsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/point-shop/products/$point-product-id/enroll-address': {
      id: '/point-shop/products/$point-product-id/enroll-address'
      path: '/point-shop/products/$point-product-id/enroll-address'
      fullPath: '/point-shop/products/$point-product-id/enroll-address'
      preLoaderRoute: typeof PointShopProductsPointProductIdEnrollAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/point-shop/products/$point-product-id/detail': {
      id: '/point-shop/products/$point-product-id/detail'
      path: '/point-shop/products/$point-product-id/detail'
      fullPath: '/point-shop/products/$point-product-id/detail'
      preLoaderRoute: typeof PointShopProductsPointProductIdDetailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-page/challenges/certify/$challenge-id': {
      id: '/my-page/challenges/certify/$challenge-id'
      path: '/my-page/challenges/certify/$challenge-id'
      fullPath: '/my-page/challenges/certify/$challenge-id'
      preLoaderRoute: typeof MyPageChallengesCertifyChallengeIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/user/me/joined': {
      id: '/challenges/user/me/joined'
      path: '/challenges/user/me/joined'
      fullPath: '/challenges/user/me/joined'
      preLoaderRoute: typeof ChallengesUserMeJoinedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/teams/join': {
      id: '/challenges/$challenge-id/teams/join'
      path: '/challenges/$challenge-id/teams/join'
      fullPath: '/challenges/$challenge-id/teams/join'
      preLoaderRoute: typeof ChallengesChallengeIdTeamsJoinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/teams/enroll': {
      id: '/challenges/$challenge-id/teams/enroll'
      path: '/challenges/$challenge-id/teams/enroll'
      fullPath: '/challenges/$challenge-id/teams/enroll'
      preLoaderRoute: typeof ChallengesChallengeIdTeamsEnrollRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/submit/individual': {
      id: '/challenges/$challenge-id/submit/individual'
      path: '/challenges/$challenge-id/submit/individual'
      fullPath: '/challenges/$challenge-id/submit/individual'
      preLoaderRoute: typeof ChallengesChallengeIdSubmitIndividualRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/teams/$team-id/': {
      id: '/challenges/$challenge-id/teams/$team-id/'
      path: '/challenges/$challenge-id/teams/$team-id'
      fullPath: '/challenges/$challenge-id/teams/$team-id'
      preLoaderRoute: typeof ChallengesChallengeIdTeamsTeamIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/teams/$team-id/modify': {
      id: '/challenges/$challenge-id/teams/$team-id/modify'
      path: '/challenges/$challenge-id/teams/$team-id/modify'
      fullPath: '/challenges/$challenge-id/teams/$team-id/modify'
      preLoaderRoute: typeof ChallengesChallengeIdTeamsTeamIdModifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/teams/$team-id/joined': {
      id: '/challenges/$challenge-id/teams/$team-id/joined'
      path: '/challenges/$challenge-id/teams/$team-id/joined'
      fullPath: '/challenges/$challenge-id/teams/$team-id/joined'
      preLoaderRoute: typeof ChallengesChallengeIdTeamsTeamIdJoinedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$challenge-id/submit/team/$team-id': {
      id: '/challenges/$challenge-id/submit/team/$team-id'
      path: '/challenges/$challenge-id/submit/team/$team-id'
      fullPath: '/challenges/$challenge-id/submit/team/$team-id'
      preLoaderRoute: typeof ChallengesChallengeIdSubmitTeamTeamIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  R500Route: R500Route,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  MyPageEditProfileRoute: MyPageEditProfileRoute,
  MyPageMyPointsRoute: MyPageMyPointsRoute,
  MyPageWithdrawRoute: MyPageWithdrawRoute,
  ChallengesIndexRoute: ChallengesIndexRoute,
  MyPageIndexRoute: MyPageIndexRoute,
  PointShopIndexRoute: PointShopIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
  TermsIndexRoute: TermsIndexRoute,
  ChallengesChallengeIdDetailRoute: ChallengesChallengeIdDetailRoute,
  MyPageChallengesCertifiedRoute: MyPageChallengesCertifiedRoute,
  PostsIdIndexRoute: PostsIdIndexRoute,
  ChallengesChallengeIdSubmitIndividualRoute:
    ChallengesChallengeIdSubmitIndividualRoute,
  ChallengesChallengeIdTeamsEnrollRoute: ChallengesChallengeIdTeamsEnrollRoute,
  ChallengesChallengeIdTeamsJoinRoute: ChallengesChallengeIdTeamsJoinRoute,
  ChallengesUserMeJoinedRoute: ChallengesUserMeJoinedRoute,
  MyPageChallengesCertifyChallengeIdRoute:
    MyPageChallengesCertifyChallengeIdRoute,
  PointShopProductsPointProductIdDetailRoute:
    PointShopProductsPointProductIdDetailRoute,
  PointShopProductsPointProductIdEnrollAddressRoute:
    PointShopProductsPointProductIdEnrollAddressRoute,
  ChallengesChallengeIdTeamsIndexRoute: ChallengesChallengeIdTeamsIndexRoute,
  ChallengesChallengeIdSubmitTeamTeamIdRoute:
    ChallengesChallengeIdSubmitTeamTeamIdRoute,
  ChallengesChallengeIdTeamsTeamIdJoinedRoute:
    ChallengesChallengeIdTeamsTeamIdJoinedRoute,
  ChallengesChallengeIdTeamsTeamIdModifyRoute:
    ChallengesChallengeIdTeamsTeamIdModifyRoute,
  ChallengesChallengeIdTeamsTeamIdIndexRoute:
    ChallengesChallengeIdTeamsTeamIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
